To get the project up and running smoothly, follow these steps. This guide will help you install the required dependencies, set up the backend, and configure the testing tools.

1. Install Node.js and npm


2. Clone the Repository
Next, clone the project from GitHub by running the following command in your terminal:

    git clone https://github.com/elias182/RicardoTask.git

Replace <repository-url> with the actual URL of the repository.

3. Install Project Dependencies
Once the project is cloned, go into the project directory:

    cd <project-name>

After that, install all the necessary dependencies using:

    npm install

4. Install Additional Libraries
The project requires some extra libraries, like PrimeReact, Bootstrap, ESLint, Prettier, and Playwright for testing. To install them, run:

    npm install primereact bootstrap eslint prettier playwright json-server

Make sure you also install JSON Server to handle any mock backend needs.

5. Start the Frontend Server
To start the frontend development server, run the following command:

    npm start

This will launch the application in your browser, usually accessible at http://localhost:3000.

6. Start JSON Server for Mock Data
If the project uses a mock backend, you can start JSON Server with:
    npm install json-serve
    npm run start:json-server

This will start the server that provides mock data to the frontend.



7. Run Playwright Tests
If you need to run Playwright tests for the project, use this command:

    npx playwright test

This will execute the Playwright tests.


Summary:
1. Install Node.js and npm.
2. Clone the repository from GitHub.
3. Install the necessary dependencies with npm install.
4. Install additional libraries: primereact, bootstrap, eslint, prettier, playwright, and json-server.
5. Start the frontend with npm start.
6. Start the JSON server with npm run start:json-server.
7. Start the backend with the correct command.
8. Run Playwright tests using npx playwright test.

This guide covers everything you need to run the project locally and set up the backend and testing tools.
